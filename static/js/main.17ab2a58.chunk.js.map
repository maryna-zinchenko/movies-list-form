{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","imdbId","validator","NewMovie","state","values","errors","handleChange","event","target","name","value","test","setState","trim","handleSubmit","preventDefault","props","onAdd","this","onSubmit","classNames","type","placeholder","onChange","Component","App","moviesFromServer","addMovie","newMovie","key","Date","now","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17ab2a58.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line max-len\nconst validator = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      if (validator.test(value)) {\n        this.setState(state => ({\n          values: {\n            ...state.values,\n            [name]: value.trim(),\n          },\n          errors: {\n            ...state.errors,\n            [name]: false,\n          },\n        }));\n      } else {\n        this.setState(state => ({\n          values: {\n            ...state.values,\n          },\n          errors: {\n            ...state.errors,\n            [name]: true,\n          },\n        }));\n      }\n    } else {\n      this.setState(state => ({\n        values: {\n          ...state.values,\n          [name]: value.trim(),\n        },\n        errors: {\n          ...state.errors,\n          [name]: false,\n        },\n      }));\n    }\n  }\n\n  handleSubmit = (event) => {\n    const { title, description, imdbId, imdbUrl, imgUrl } = this.state.values;\n\n    event.preventDefault();\n\n    if (!title || !imdbId || !imdbUrl || !imgUrl) {\n      this.setState(state => ({\n        errors: {\n          title: !state.values.title,\n          imgUrl: !state.values.imgUrl,\n          imdbUrl: !state.values.imdbUrl,\n          imdbId: !state.values.imdbId,\n        },\n      }));\n    } else {\n      this.props.onAdd(title, imdbId, imdbUrl, imgUrl, description);\n      this.setState({\n        values: {\n          title: '',\n          description: '',\n          imgUrl: '',\n          imdbUrl: '',\n          imdbId: '',\n        },\n      });\n    }\n  }\n\n  render() {\n    const { values, errors } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Add new movie form:</h1>\n        {errors.title && <p>Please enter the title!</p>}\n        <input\n          className={classNames('input', { 'is-danger': errors.title })}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"title\"\n          value={values.title}\n          onChange={this.handleChange}\n        />\n        <br />\n        {errors.imdbId && <p>Please enter the imdbId!</p>}\n        <input\n          className={classNames('input', { 'is-danger': errors.imdbId })}\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          value={values.imdbId}\n          onChange={this.handleChange}\n        />\n        <br />\n        {errors.imdbUrl && <p>Please enter the imdbUrl!</p>}\n        <input\n          className={classNames('input', { 'is-danger': errors.imdbUrl })}\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={values.imdbUrl}\n          onChange={this.handleChange}\n        />\n        <br />\n        {errors.imgUrl && <p>Please enter imgUrl!</p>}\n        <input\n          className={classNames('input', { 'is-danger': errors.imgUrl })}\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"imgUrl\"\n          value={values.imgUrl}\n          onChange={this.handleChange}\n        />\n        <br />\n        <textarea\n          className=\"textarea\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={values.description}\n          onChange={this.handleChange}\n        />\n        <br />\n        <button\n          className=\"button is-light\"\n          type=\"submit\"\n        >\n          New movie!\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, imdbId, imdbUrl, imgUrl, description) => {\n    const newMovie = {\n      key: Date.now(),\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        newMovie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}